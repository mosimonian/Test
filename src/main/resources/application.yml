spring:
  devtools:
    restart:
      enabled: false
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/user
    hikari: # springboot 2.0 整合了hikari ,据说这是目前性能最好的java数据库连接池
      username: root
      password: root
  jpa:
    hibernate:
      ddl-auto: update  # 第一次建表create  后面用update，要不然每次重启都会新建表
    show-sql: true


#  jpa.hibernate.ddl-auto是hibernate的配置属性，其主要作用是：自动创建、更新、验证数据库表结构。该参数的几种配置如下：
#  ·create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#  ·create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#  ·update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表
#             中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#  ·validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。


#server:
#  port: 8080
#
#
#spring:
#  datasource:
#    name: mysql_test
#    type: com.alibaba.druid.pool.DruidDataSource
#    #druid相关配置
#    druid:
#      #监控统计拦截的filters
#      filters: stat
#      driver-class-name: com.mysql.jdbc.Driver
#      #基本属性
#      url: jdbc:mysql://localhost:3306/user
#      username: root
#      password: root
#      #配置初始化大小/最小/最大
#      initial-size: 1
#      min-idle: 1
#      max-active: 20
#      #获取连接等待超时时间
#      max-wait: 60000
#      #间隔多久进行一次检测，检测需要关闭的空闲连接
#      time-between-eviction-runs-millis: 60000
#      #一个连接在池中最小生存的时间
#      min-evictable-idle-time-millis: 300000
#      validation-query: SELECT 'x'
#      test-while-idle: true
#      test-on-borrow: false
#      test-on-return: false
#      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
#      pool-prepared-statements: false
#      max-pool-prepared-statement-per-connection-size: 20
### 该配置节点为独立的节点，有很多同学容易将这个配置放在spring的节点下，导致配置无法被识别
#mybatis:
#  mapper-locations: classpath:mapper/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
#  type-aliases-package: com.example.model  # 注意：对应实体类的路径
#
##pagehelper
#pagehelper:
#  helperDialect: mysql
#  reasonable: true
#  supportMethodsArguments: true
#  params: count=countSql
#  returnPageInfo: check
